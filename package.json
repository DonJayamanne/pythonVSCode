{
    "name": "jupyter",
    "displayName": "Jupyter",
    "description": "Linting, Debugging (multi-threaded, remote), Intellisense, Jupyter Notebooks, code formatting, refactoring, unit tests, snippets, and more.",
    "version": "2020.11.0-dev",
    "featureFlags": {
        "usingNewInterpreterStorage": true
    },
    "languageServerVersion": "0.5.30",
    "publisher": "ms-toolsai",
    "enableProposedApi": true,
    "author": {
        "name": "Microsoft Corporation"
    },
    "license": "MIT",
    "homepage": "https://github.com/Microsoft/vscode-jupyter",
    "repository": {
        "type": "git",
        "url": "https://github.com/Microsoft/vscode-jupyter"
    },
    "bugs": {
        "url": "https://github.com/Microsoft/vscode-jupyter/issues"
    },
    "qna": "https://stackoverflow.com/questions/tagged/visual-studio-code+jupyter",
    "icon": "icon.png",
    "galleryBanner": {
        "color": "#1e415e",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.48.0"
    },
    "keywords": [
        "jupyter",
        "notebook",
        "ipynb",
        "multi-root ready",
        "python"
    ],
    "categories": [
        "Programming Languages",
        "Other",
        "Extension Packs",
        "Data Science",
        "Machine Learning",
        "Notebooks"
    ],
    "activationEvents": [
        "onLanguage:python",
        "onLanguage:jupyter",
        "onCommand:jupyter.viewOutput",
        "onCommand:jupyter.export",
        "onCommand:jupyter.exportAsPythonScript",
        "onCommand:jupyter.exportToHTML",
        "onCommand:jupyter.exportToPDF",
        "onCommand:jupyter.switchOffInsidersChannel",
        "onCommand:jupyter.switchToDailyChannel",
        "onCommand:jupyter.switchToWeeklyChannel",
        "onCommand:jupyter.createnewnotebook",
        "onCommand:jupyter.createnewinteractive",
        "onCommand:jupyter.importnotebook",
        "onCommand:jupyter.importnotebookfile",
        "onCommand:jupyter.opennotebook",
        "onCommand:jupyter.opennotebookInPreviewEditor",
        "onCommand:jupyter.selectjupyteruri",
        "onCommand:jupyter.exportfileasnotebook",
        "onCommand:jupyter.exportfileandoutputasnotebook",
        "onCommand:jupyter.selectJupyterInterpreter",
        "onCommand:jupyter.selectjupytercommandline",
        "onNotebook:jupyter-notebook",
        "onCustomEditor:jupyter.notebook.ipynb"
    ],
    "main": "./out/client/extension",
    "contributes": {
        "keybindings": [
            {
                "command": "jupyter.execSelectionInteractive",
                "key": "shift+enter",
                "when": "editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && jupyter.ownsSelection && !notebookEditorFocused"
            },
            {
                "command": "jupyter.runcurrentcelladvance",
                "key": "shift+enter",
                "when": "editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.runcurrentcell",
                "key": "ctrl+enter",
                "when": "editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.runcurrentcellandaddbelow",
                "key": "alt+enter",
                "when": "editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "mac": "F",
                "win": "F",
                "linux": "F",
                "key": "F",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.find"
            },
            {
                "mac": "K",
                "win": "K",
                "linux": "K",
                "key": "K",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "list.focusUp"
            },
            {
                "mac": "J",
                "win": "J",
                "linux": "J",
                "key": "J",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "list.focusDown"
            },
            {
                "mac": "A",
                "win": "A",
                "linux": "A",
                "key": "A",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.insertCodeCellAbove"
            },
            {
                "mac": "B",
                "win": "B",
                "linux": "B",
                "key": "B",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.insertCodeCellBelow"
            },
            {
                "mac": "D D",
                "win": "D D",
                "linux": "D D",
                "key": "D D",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.delete"
            },
            {
                "mac": "Z",
                "win": "Z",
                "linux": "Z",
                "key": "Z",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.undo"
            },
            {
                "mac": "C",
                "win": "C",
                "linux": "C",
                "key": "C",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.copy"
            },
            {
                "mac": "X",
                "win": "X",
                "linux": "X",
                "key": "X",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.cut"
            },
            {
                "mac": "V",
                "win": "V",
                "linux": "V",
                "key": "V",
                "when": "notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.paste"
            },
            {
                "mac": "ctrl+shift+-",
                "win": "ctrl+shift+-",
                "linux": "ctrl+shift+-",
                "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookViewType == jupyter-notebook",
                "command": "notebook.cell.split"
            },
            {
                "command": "jupyter.insertCellBelowPosition",
                "key": "ctrl+; s",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.insertCellBelow",
                "key": "ctrl+; b",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.insertCellAbove",
                "key": "ctrl+; a",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.deleteCells",
                "key": "ctrl+; x",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.extendSelectionByCellAbove",
                "key": "ctrl+alt+shift+[",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.extendSelectionByCellBelow",
                "key": "ctrl+alt+shift+]",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.moveCellsUp",
                "key": "ctrl+; u",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.moveCellsDown",
                "key": "ctrl+; d",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.changeCellToMarkdown",
                "key": "ctrl+; m",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.changeCellToCode",
                "key": "ctrl+; c",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.gotoNextCellInFile",
                "key": "ctrl+alt+]",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.gotoPrevCellInFile",
                "key": "ctrl+alt+[",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.selectCellContents",
                "key": "ctrl+alt+\\",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            },
            {
                "command": "jupyter.selectCell",
                "key": "ctrl+alt+shift+\\",
                "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
            }
        ],
        "commands": [
            {
                "command": "jupyter.switchOffInsidersChannel",
                "title": "%jupyter.command.jupyter.switchOffInsidersChannel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.switchToDailyChannel",
                "title": "%jupyter.command.jupyter.switchToDailyChannel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.switchToWeeklyChannel",
                "title": "%jupyter.command.jupyter.switchToWeeklyChannel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.viewOutput",
                "title": "%jupyter.command.jupyter.viewOutput.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.export",
                "title": "%DataScience.notebookExportAs%",
                "category": "Jupyter",
                "icon": {
                    "light": "resources/light/export_to_python.svg",
                    "dark": "resources/dark/export_to_python.svg"
                },
                "enablement": "notebookViewType == jupyter-notebook && jupyter.isnotebooktrusted"
            },
            {
                "command": "jupyter.exportAsPythonScript",
                "title": "%jupyter.command.jupyter.exportAsPythonScript.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.exportToHTML",
                "title": "%jupyter.command.jupyter.exportToHTML.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.exportToPDF",
                "title": "%jupyter.command.jupyter.exportToPDF.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.selectJupyterInterpreter",
                "title": "%jupyter.command.jupyter.selectJupyterInterpreter.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runcurrentcell",
                "title": "%jupyter.command.jupyter.runcurrentcell.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.debugcell",
                "title": "%jupyter.command.jupyter.debugcell.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.debugstepover",
                "title": "%jupyter.command.jupyter.debugstepover.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.debugstop",
                "title": "%jupyter.command.jupyter.debugstop.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.debugcontinue",
                "title": "%jupyter.command.jupyter.debugcontinue.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.insertCellBelowPosition",
                "title": "%jupyter.command.jupyter.insertCellBelowPosition.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.insertCellBelow",
                "title": "%jupyter.command.jupyter.insertCellBelow.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.insertCellAbove",
                "title": "%jupyter.command.jupyter.insertCellAbove.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.deleteCells",
                "title": "%jupyter.command.jupyter.deleteCells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.selectCell",
                "title": "%jupyter.command.jupyter.selectCell.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.selectCellContents",
                "title": "%jupyter.command.jupyter.selectCellContents.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.extendSelectionByCellAbove",
                "title": "%jupyter.command.jupyter.extendSelectionByCellAbove.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.extendSelectionByCellBelow",
                "title": "%jupyter.command.jupyter.extendSelectionByCellBelow.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.moveCellsUp",
                "title": "%jupyter.command.jupyter.moveCellsUp.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.moveCellsDown",
                "title": "%jupyter.command.jupyter.moveCellsDown.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.changeCellToMarkdown",
                "title": "%jupyter.command.jupyter.changeCellToMarkdown.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.changeCellToCode",
                "title": "%jupyter.command.jupyter.changeCellToCode.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.gotoNextCellInFile",
                "title": "%jupyter.command.jupyter.gotoNextCellInFile.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.gotoPrevCellInFile",
                "title": "%jupyter.command.jupyter.gotoPrevCellInFile.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runcurrentcelladvance",
                "title": "%jupyter.command.jupyter.runcurrentcelladvance.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runcurrentcellandallbelow.palette",
                "title": "%jupyter.command.jupyter.runcurrentcellandallbelow.palette.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runallcellsabove.palette",
                "title": "%jupyter.command.jupyter.runallcellsabove.palette.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.debugcurrentcell.palette",
                "title": "%jupyter.command.jupyter.debugcurrentcell.palette.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.execSelectionInteractive",
                "title": "%jupyter.command.jupyter.execSelectionInteractive.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.createnewinteractive",
                "title": "%jupyter.command.jupyter.createnewinteractive.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runFileInteractive",
                "title": "%jupyter.command.jupyter.runFileInteractive.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.debugFileInteractive",
                "title": "%jupyter.command.jupyter.debugFileInteractive.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runallcells",
                "title": "%jupyter.command.jupyter.runallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runallcellsabove",
                "title": "%jupyter.command.jupyter.runallcellsabove.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runcellandallbelow",
                "title": "%jupyter.command.jupyter.runcellandallbelow.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runcell",
                "title": "%jupyter.command.jupyter.runcell.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runtoline",
                "title": "%jupyter.command.jupyter.runtoline.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.runfromline",
                "title": "%jupyter.command.jupyter.runfromline.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.selectjupyteruri",
                "title": "%jupyter.command.jupyter.selectjupyteruri.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.selectjupytercommandline",
                "title": "%jupyter.command.jupyter.selectjupytercommandline.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.importnotebook",
                "title": "%jupyter.command.jupyter.importnotebook.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.importnotebookfile",
                "title": "%jupyter.command.jupyter.importnotebookfile.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.opennotebook",
                "title": "%jupyter.command.jupyter.opennotebook.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.opennotebookInPreviewEditor",
                "title": "%jupyter.command.jupyter.opennotebookInPreviewEditor.title%",
                "enablement": "jupyter.opennotebookInPreviewEditor.enabled",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.exportoutputasnotebook",
                "title": "%jupyter.command.jupyter.exportoutputasnotebook.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.exportfileasnotebook",
                "title": "%jupyter.command.jupyter.exportfileasnotebook.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.exportfileandoutputasnotebook",
                "title": "%jupyter.command.jupyter.exportfileandoutputasnotebook.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.undocells",
                "title": "%jupyter.command.jupyter.undocells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.redocells",
                "title": "%jupyter.command.jupyter.redocells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.undocells",
                "title": "%jupyter.command.jupyter.undocells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.redocells",
                "title": "%jupyter.command.jupyter.redocells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.removeallcells",
                "title": "%jupyter.command.jupyter.removeallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.interruptkernel",
                "title": "%jupyter.command.jupyter.interruptkernel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.restartkernel",
                "title": "%jupyter.command.jupyter.restartkernel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.removeallcells",
                "title": "%jupyter.command.jupyter.notebookeditor.removeallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.interruptkernel",
                "title": "%jupyter.command.jupyter.interruptkernel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.restartkernel",
                "title": "%jupyter.command.jupyter.restartkernel.title%",
                "category": "Jupyter",
                "icon": {
                    "light": "resources/light/restart-kernel.svg",
                    "dark": "resources/dark/restart-kernel.svg"
                },
                "enablement": "jupyter.notebookeditor.canrestartNotebookkernel"
            },
            {
                "command": "jupyter.notebookeditor.trust",
                "title": "%DataScience.trustNotebookCommandTitle%",
                "category": "Jupyter",
                "icon": {
                    "light": "resources/light/un-trusted.svg",
                    "dark": "resources/dark/un-trusted.svg"
                },
                "enablement": "notebookViewType == jupyter-notebook && !jupyter.isnotebooktrusted && jupyter.trustfeatureenabled"
            },
            {
                "command": "jupyter.notebookeditor.runallcells",
                "title": "%jupyter.command.jupyter.notebookeditor.runallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.runselectedcell",
                "title": "%jupyter.command.jupyter.notebookeditor.runselectedcell.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.addcellbelow",
                "title": "%jupyter.command.jupyter.notebookeditor.addcellbelow.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.removeallcells",
                "title": "%jupyter.command.jupyter.notebookeditor.removeallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.expandallcells",
                "title": "%jupyter.command.jupyter.notebookeditor.expandallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.notebookeditor.collapseallcells",
                "title": "%jupyter.command.jupyter.notebookeditor.collapseallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.expandallcells",
                "title": "%jupyter.command.jupyter.expandallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.collapseallcells",
                "title": "%jupyter.command.jupyter.collapseallcells.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.addcellbelow",
                "title": "%jupyter.command.jupyter.addcellbelow.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.createnewnotebook",
                "title": "%jupyter.command.jupyter.createnewnotebook.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.scrolltocell",
                "title": "%jupyter.command.jupyter.scrolltocell.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.switchKernel",
                "title": "%DataScience.selectKernel%",
                "category": "Jupyter",
                "enablement": "jupyter.isnativeactive"
            },
            {
                "command": "jupyter.latestExtension",
                "title": "DataScience.latestExtension",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.createGitHubIssue",
                "title": "%jupyter.command.jupyter.createGitHubIssue.title%",
                "enablement": "config.noExists",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.submitGitHubIssue",
                "title": "%jupyter.command.jupyter.submitGitHubIssue.title%",
                "enablement": "config.noExists",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.enableDebugLogging",
                "title": "%jupyter.command.jupyter.enableDebugLogging.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.resetLoggingLevel",
                "title": "%jupyter.command.jupyter.resetLoggingLevel.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.showDataViewer",
                "title": "%jupyter.command.jupyter.showDataViewer.title%",
                "category": "Jupyter"
            },
            {
                "command": "jupyter.clearSavedJupyterUris",
                "title": "%jupyter.command.jupyter.clearSavedJupyterUris.title%",
                "category": "Jupyter"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "when": "editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused",
                    "command": "jupyter.runallcells",
                    "group": "Jupyter2"
                },
                {
                    "when": "editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused",
                    "command": "jupyter.runcurrentcell",
                    "group": "Jupyter2"
                },
                {
                    "when": "editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused",
                    "command": "jupyter.runcurrentcelladvance",
                    "group": "Jupyter2"
                },
                {
                    "command": "jupyter.runFileInteractive",
                    "group": "Jupyter2",
                    "when": "editorFocus && editorLangId == python && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.runfromline",
                    "group": "Jupyter2",
                    "when": "editorFocus && editorLangId == python && jupyter.ownsSelection && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.runtoline",
                    "group": "Jupyter2",
                    "when": "editorFocus && editorLangId == python && jupyter.ownsSelection && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.execSelectionInteractive",
                    "group": "Jupyter2",
                    "when": "editorFocus && editorLangId == python && jupyter.ownsSelection && !notebookEditorFocused"
                },
                {
                    "when": "editorFocus && editorLangId == python && resourceLangId == jupyter && !notebookEditorFocused",
                    "command": "jupyter.importnotebook",
                    "group": "Jupyter3@1"
                },
                {
                    "when": "editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused",
                    "command": "jupyter.exportfileasnotebook",
                    "group": "Jupyter3@2"
                },
                {
                    "when": "editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused",
                    "command": "jupyter.exportfileandoutputasnotebook",
                    "group": "Jupyter3@3"
                }
            ],
            "editor/title": [
                {
                    "command": "jupyter.notebookeditor.restartkernel",
                    "title": "%jupyter.command.jupyter.restartkernel.title%",
                    "group": "navigation",
                    "when": "resourceLangId == jupyter && notebookViewType == 'jupyter-notebook'"
                },
                {
                    "command": "jupyter.notebookeditor.trust",
                    "title": "%DataScience.trustNotebookCommandTitle%",
                    "group": "navigation@1",
                    "when": "resourceLangId == jupyter && notebookViewType == 'jupyter-notebook' && !jupyter.isnotebooktrusted && jupyter.trustfeatureenabled"
                },
                {
                    "command": "jupyter.export",
                    "title": "%DataScience.notebookExportAs%",
                    "group": "navigation",
                    "when": "resourceLangId == jupyter && notebookViewType == 'jupyter-notebook' && jupyter.isnotebooktrusted"
                }
            ],
            "explorer/context": [
                {
                    "when": "resourceLangId == python && !notebookEditorFocused",
                    "command": "jupyter.runFileInteractive",
                    "group": "Jupyter2"
                },
                {
                    "when": "resourceLangId == jupyter",
                    "command": "jupyter.opennotebook",
                    "group": "Jupyter"
                },
                {
                    "when": "resourceLangId == jupyter && jupyter.vscode.channel == 'insiders' && jupyter.opennotebookInPreviewEditor.enabled",
                    "command": "jupyter.opennotebookInPreviewEditor",
                    "group": "Jupyter"
                },
                {
                    "when": "resourceLangId == jupyter",
                    "command": "jupyter.importnotebookfile",
                    "group": "Jupyter"
                }
            ],
            "commandPalette": [
                {
                    "command": "jupyter.exportAsPythonScript",
                    "title": "%jupyter.command.jupyter.exportAsPythonScript.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.exportToHTML",
                    "title": "%jupyter.command.jupyter.exportToHTML.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.exportToPDF",
                    "title": "%jupyter.command.jupyter.exportToPDF.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.switchOffInsidersChannel",
                    "title": "%jupyter.command.jupyter.switchOffInsidersChannel.title%",
                    "category": "Jupyter",
                    "when": "config.jupyter.insidersChannel != 'default'"
                },
                {
                    "command": "jupyter.switchToDailyChannel",
                    "title": "%jupyter.command.jupyter.switchToDailyChannel.title%",
                    "category": "Jupyter",
                    "when": "config.jupyter.insidersChannel != 'daily'"
                },
                {
                    "command": "jupyter.switchToWeeklyChannel",
                    "title": "%jupyter.command.jupyter.switchToWeeklyChannel.title%",
                    "category": "Jupyter",
                    "when": "config.jupyter.insidersChannel != 'weekly'"
                },
                {
                    "command": "jupyter.insertCellBelowPosition",
                    "title": "%jupyter.command.jupyter.insertCellBelowPosition.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.insertCellBelow",
                    "title": "%jupyter.command.jupyter.insertCellBelow.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.insertCellAbove",
                    "title": "%jupyter.command.jupyter.insertCellAbove.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.deleteCells",
                    "title": "%jupyter.command.jupyter.deleteCells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.selectCell",
                    "title": "%jupyter.command.jupyter.selectCell.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.selectCellContents",
                    "title": "%jupyter.command.jupyter.selectCellContents.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.extendSelectionByCellAbove",
                    "title": "%jupyter.command.jupyter.extendSelectionByCellAbove.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.extendSelectionByCellBelow",
                    "title": "%jupyter.command.jupyter.extendSelectionByCellBelow.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.moveCellsUp",
                    "title": "%jupyter.command.jupyter.moveCellsUp.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.moveCellsDown",
                    "title": "%jupyter.command.jupyter.moveCellsDown.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.changeCellToMarkdown",
                    "title": "%jupyter.command.jupyter.changeCellToMarkdown.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.changeCellToCode",
                    "title": "%jupyter.command.jupyter.changeCellToCode.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.gotoNextCellInFile",
                    "title": "%jupyter.command.jupyter.gotoNextCellInFile.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.gotoPrevCellInFile",
                    "title": "%jupyter.command.jupyter.gotoPrevCellInFile.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.runcurrentcell",
                    "title": "%jupyter.command.jupyter.runcurrentcell.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonornativeactive"
                },
                {
                    "command": "jupyter.runcurrentcelladvance",
                    "title": "%jupyter.command.jupyter.runcurrentcelladvance.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonornativeactive"
                },
                {
                    "command": "jupyter.runcurrentcellandallbelow.palette",
                    "title": "%jupyter.command.jupyter.runcurrentcellandallbelow.palette.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonornativeactive"
                },
                {
                    "command": "jupyter.runallcellsabove.palette",
                    "title": "%jupyter.command.jupyter.runallcellsabove.palette.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonornativeactive"
                },
                {
                    "command": "jupyter.debugcurrentcell.palette",
                    "title": "%jupyter.command.jupyter.debugcurrentcell.palette.title%",
                    "category": "Jupyter",
                    "when": "editorLangId == python && jupyter.hascodecells"
                },
                {
                    "command": "jupyter.createnewinteractive",
                    "title": "%jupyter.command.jupyter.createnewinteractive.title%",
                    "category": "Jupyter"
                },
                {
                    "command": "jupyter.runallcells",
                    "title": "%jupyter.command.jupyter.runallcells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonornativeactive"
                },
                {
                    "command": "jupyter.scrolltocell",
                    "title": "%jupyter.command.jupyter.scrolltocell.title%",
                    "category": "Jupyter",
                    "when": "false"
                },
                {
                    "command": "jupyter.debugcell",
                    "title": "%jupyter.command.jupyter.debugcell.title%",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.runcell",
                    "title": "%jupyter.command.jupyter.runcell.title%",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.runFileInteractive",
                    "title": "%jupyter.command.jupyter.runFileInteractive.title%",
                    "category": "Jupyter",
                    "when": "editorLangId == python && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.debugFileInteractive",
                    "title": "%jupyter.command.jupyter.debugFileInteractive.title%",
                    "category": "Jupyter",
                    "when": "editorLangId == python && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.importnotebook",
                    "title": "%jupyter.command.jupyter.importnotebook.title%",
                    "category": "Jupyter"
                },
                {
                    "command": "jupyter.opennotebook",
                    "title": "%jupyter.command.jupyter.opennotebook.title%",
                    "category": "Jupyter"
                },
                {
                    "command": "jupyter.exportfileasnotebook",
                    "title": "%jupyter.command.jupyter.exportfileasnotebook.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.exportfileandoutputasnotebook",
                    "title": "%jupyter.command.jupyter.exportfileandoutputasnotebook.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.undocells",
                    "title": "%jupyter.command.jupyter.undocells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.haveinteractivecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.redocells",
                    "title": "%jupyter.command.jupyter.redocells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.haveredoablecells && jupyter.ispythonorinteractiveornativeeactive && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.removeallcells",
                    "title": "%jupyter.command.jupyter.removeallcells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.haveinteractivecells && jupyter.ispythonorinteractiveeactive"
                },
                {
                    "command": "jupyter.interruptkernel",
                    "title": "%jupyter.command.jupyter.interruptkernel.title%",
                    "category": "Jupyter",
                    "when": "jupyter.haveinteractive && jupyter.ispythonorinteractiveeactive"
                },
                {
                    "command": "jupyter.restartkernel",
                    "title": "%jupyter.command.jupyter.restartkernel.title%",
                    "category": "Jupyter",
                    "when": "jupyter.haveinteractive && jupyter.ispythonorinteractiveeactive"
                },
                {
                    "command": "jupyter.notebookeditor.undocells",
                    "title": "%jupyter.command.jupyter.undocells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.haveinteractivecells && jupyter.isnativeactive && !notebookEditorFocused && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.redocells",
                    "title": "%jupyter.command.jupyter.redocells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.havenativeredoablecells && jupyter.isnativeactive && !notebookEditorFocused&& jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.removeallcells",
                    "title": "%jupyter.command.jupyter.notebookeditor.removeallcells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.havenativecells && jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.interruptkernel",
                    "title": "%jupyter.command.jupyter.interruptkernel.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.restartkernel",
                    "title": "%jupyter.command.jupyter.restartkernel.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.trust",
                    "title": "%DataScience.trustNotebookCommandTitle%",
                    "category": "Jupyter",
                    "when": "notebookEditorFocused && !jupyter.isnotebooktrusted && jupyter.trustfeatureenabled"
                },
                {
                    "command": "jupyter.notebookeditor.runallcells",
                    "title": "%jupyter.command.jupyter.notebookeditor.runallcells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.runselectedcell",
                    "title": "%jupyter.command.jupyter.notebookeditor.runselectedcell.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.havecellselected && !notebookEditorFocused && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.runselectedcell",
                    "title": "%jupyter.command.jupyter.notebookeditor.runselectedcell.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && notebookEditorFocused && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.addcellbelow",
                    "title": "%jupyter.command.jupyter.notebookeditor.addcellbelow.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive && jupyter.isnotebooktrusted"
                },
                {
                    "command": "jupyter.notebookeditor.removeallcells",
                    "title": "%jupyter.command.jupyter.removeallcells.title%",
                    "category": "Jupyter",
                    "when": "notebookEditorFocused"
                },
                {
                    "command": "jupyter.notebookeditor.expandallcells",
                    "title": "%jupyter.command.jupyter.expandallcells.title%",
                    "category": "Jupyter",
                    "when": "notebookEditorFocused"
                },
                {
                    "command": "jupyter.notebookeditor.collapseallcells",
                    "title": "%jupyter.command.jupyter.collapseallcells.title%",
                    "category": "Jupyter",
                    "when": "notebookEditorFocused"
                },
                {
                    "command": "jupyter.expandallcells",
                    "title": "%jupyter.command.jupyter.expandallcells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isinteractiveactive"
                },
                {
                    "command": "jupyter.collapseallcells",
                    "title": "%jupyter.command.jupyter.collapseallcells.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isinteractiveactive"
                },
                {
                    "command": "jupyter.exportoutputasnotebook",
                    "title": "%jupyter.command.jupyter.exportoutputasnotebook.title%",
                    "category": "Jupyter",
                    "when": "jupyter.isinteractiveactive"
                },
                {
                    "command": "jupyter.runcellandallbelow",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.runallcellsabove",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.debugcontinue",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.debugstop",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.debugstepover",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.debugcell",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.addcellbelow",
                    "title": "%jupyter.command.jupyter.addcellbelow.title%",
                    "category": "Jupyter",
                    "when": "jupyter.hascodecells && jupyter.ispythonornativeactive"
                },
                {
                    "command": "jupyter.createnewnotebook",
                    "title": "%jupyter.command.jupyter.createnewnotebook.title%",
                    "category": "Jupyter"
                },
                {
                    "command": "jupyter.runtoline",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.runfromline",
                    "category": "Jupyter",
                    "when": "config.noExists"
                },
                {
                    "command": "jupyter.execSelectionInteractive",
                    "category": "Jupyter",
                    "when": "editorLangId == python && !notebookEditorFocused"
                },
                {
                    "command": "jupyter.switchKernel",
                    "title": "%DataScience.selectKernel%",
                    "category": "Jupyter",
                    "when": "jupyter.isnativeactive"
                },
                {
                    "command": "jupyter.latestExtension",
                    "title": "%DataScience.latestExtension%",
                    "category": "Jupyter",
                    "when": "false"
                },
                {
                    "command": "jupyter.export",
                    "title": "%DataScience.notebookExportAs%",
                    "category": "Jupyter",
                    "when": "false"
                },
                {
                    "command": "jupyter.resetLoggingLevel",
                    "title": "%jupyter.command.jupyter.resetLoggingLevel.title%",
                    "category": "Jupyter",
                    "when": "config.jupyter.logging.level != error"
                },
                {
                    "command": "jupyter.enableDebugLogging",
                    "title": "%jupyter.command.jupyter.enableDebugLogging.title%",
                    "category": "Jupyter",
                    "when": "config.jupyter.logging.level != debug"
                },
                {
                    "command": "jupyter.createGitHubIssue",
                    "title": "%jupyter.command.jupyter.createGitHubIssue.title%",
                    "category": "Jupyter",
                    "when": "config.jupyter.logging.level == debug && config.noExists"
                },
                {
                    "command": "jupyter.showDataViewer",
                    "category": "Jupyter",
                    "when": "false"
                },
                {
                    "command": "jupyter.opennotebookInPreviewEditor",
                    "when": "false",
                    "category": "Jupyter"
                }
            ],
            "debug/variables/context": [
                {
                    "command": "jupyter.showDataViewer",
                    "group": "1_view",
                    "when": "python.isDebuggerDataViewerExperimentEnabled && debugProtocolVariableMenuContext == 'viewableInDataViewer'"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Jupyter",
            "properties": {
                "jupyter.experiments.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables/disables A/B tests.",
                    "scope": "machine"
                },
                "jupyter.logging.level": {
                    "type": "string",
                    "default": "error",
                    "enum": [
                        "off",
                        "error",
                        "warn",
                        "info",
                        "debug"
                    ],
                    "description": "The logging level the extension logs at, defaults to 'error'",
                    "scope": "machine"
                },
                "jupyter.experiments.optInto": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "enum": [
                            "NativeNotebookEditor",
                            "CustomEditor",
                            "RunByLine",
                            "All"
                        ]
                    },
                    "description": "List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-jupyter/wiki/Experiments for more details.",
                    "scope": "machine"
                },
                "jupyter.experiments.optOutFrom": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "enum": [
                            "NativeNotebookEditor",
                            "CustomEditor",
                            "RunByLine",
                            "All"
                        ]
                    },
                    "description": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-jupyter/wiki/Experiments for more details.",
                    "scope": "machine"
                },
                "jupyter.allowImportFromNotebook": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allows a user to import a jupyter notebook into a python file anytime one is opened.",
                    "scope": "resource"
                },
                "jupyter.widgetScriptSources": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string",
                        "enum": [
                            "jsdelivr.com",
                            "unpkg.com"
                        ],
                        "enumDescriptions": [
                            "Loads widget (javascript) scripts from https://www.jsdelivr.com/",
                            "Loads widget (javascript) scripts from https://unpkg.com/"
                        ]
                    },
                    "uniqueItems": true,
                    "markdownDescription": "Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.",
                    "scope": "machine"
                },
                "jupyter.askForLargeDataFrames": {
                    "type": "boolean",
                    "default": true,
                    "description": "Warn the user before trying to open really large data frames.",
                    "scope": "application"
                },
                "jupyter.askForKernelRestart": {
                    "type": "boolean",
                    "default": true,
                    "description": "Warn the user before restarting a kernel.",
                    "scope": "application"
                },
                "jupyter.exportWithOutputEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable exporting a python file into a jupyter notebook and run all cells when doing so.",
                    "scope": "resource"
                },
                "jupyter.jupyterLaunchTimeout": {
                    "type": "number",
                    "default": 60000,
                    "description": "Amount of time (in ms) to wait for the Jupyter Notebook server to start.",
                    "scope": "resource"
                },
                "jupyter.jupyterLaunchRetries": {
                    "type": "number",
                    "default": 3,
                    "description": "Number of times to attempt to connect to the Jupyter Notebook",
                    "scope": "resource"
                },
                "jupyter.jupyterServerType": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ],
                    "description": "Determines the type of connection for talking to jupyter. Local will start kernels locally. Remote allows for connections to remote servers",
                    "scope": "resource"
                },
                "jupyter.jupyterCommandLineArguments": {
                    "type": "array",
                    "default": [],
                    "description": "When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Jupyter Extension.",
                    "scope": "resource"
                },
                "jupyter.notebookFileRoot": {
                    "type": "string",
                    "default": "${fileDirname}",
                    "description": "Set the root directory for loading files for the Interactive window.",
                    "scope": "resource"
                },
                "jupyter.searchForJupyter": {
                    "type": "boolean",
                    "default": true,
                    "description": "Search all installed Python interpreters for a Jupyter installation when starting the Interactive window",
                    "scope": "resource"
                },
                "jupyter.changeDirOnImportExport": {
                    "type": "boolean",
                    "default": false,
                    "description": "When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.",
                    "scope": "resource"
                },
                "jupyter.useDefaultConfigForJupyter": {
                    "type": "boolean",
                    "default": true,
                    "description": "When running Jupyter locally, create a default empty Jupyter config for the Interactive window",
                    "scope": "resource"
                },
                "jupyter.jupyterInterruptTimeout": {
                    "type": "number",
                    "default": 10000,
                    "description": "Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.",
                    "scope": "resource"
                },
                "jupyter.allowInput": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allow the inputting of python code directly into the Interactive window"
                },
                "jupyter.showCellInputCode": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show cell input code.",
                    "scope": "resource"
                },
                "jupyter.collapseCellInputCodeByDefault": {
                    "type": "boolean",
                    "default": true,
                    "description": "Collapse cell input code by default.",
                    "scope": "resource"
                },
                "jupyter.maxOutputSize": {
                    "type": "number",
                    "default": 400,
                    "description": "Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.",
                    "scope": "resource"
                },
                "jupyter.alwaysScrollOnNewCell": {
                    "type": "boolean",
                    "default": false,
                    "description": "Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.",
                    "scope": "resource"
                },
                "jupyter.showKernelSelectionOnInteractiveWindow": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to true, enables the kernel selector in the Interactive Window. By default, the Interactive Window will use your Python Interpreters kernel.",
                    "scope": "resource"
                },
                "jupyter.enableScrollingForCellOutputs": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Interactive Window.",
                    "scope": "resource"
                },
                "jupyter.errorBackgroundColor": {
                    "type": "string",
                    "default": "#FFFFFF",
                    "description": "Background color (in hex) for exception messages in the Interactive window.",
                    "scope": "resource",
                    "deprecationMessage": "No longer necessary as the theme colors are used for error messages"
                },
                "jupyter.sendSelectionToInteractiveWindow": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determines if selected code in a python file will go to the terminal or the Interactive window when hitting shift+enter",
                    "scope": "resource"
                },
                "jupyter.showJupyterVariableExplorer": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show the variable explorer in the Interactive window.",
                    "deprecationMessage": "This setting no longer applies. It is ignored.",
                    "scope": "resource"
                },
                "jupyter.variableExplorerExclude": {
                    "type": "string",
                    "default": "module;function;builtin_function_or_method",
                    "description": "Types to exclude from showing in the Interactive variable explorer",
                    "scope": "resource"
                },
                "jupyter.codeRegularExpression": {
                    "type": "string",
                    "default": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
                    "description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank",
                    "scope": "resource"
                },
                "jupyter.defaultCellMarker": {
                    "type": "string",
                    "default": "# %%",
                    "description": "Cell marker used for delineating a cell in a python file.",
                    "scope": "resource"
                },
                "jupyter.markdownRegularExpression": {
                    "type": "string",
                    "default": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
                    "description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank",
                    "scope": "resource"
                },
                "jupyter.allowLiveShare": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allow the Interactive window to be shared during a Live Share session",
                    "scope": "resource"
                },
                "jupyter.ignoreVscodeTheme": {
                    "type": "boolean",
                    "default": false,
                    "description": "Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.",
                    "scope": "resource"
                },
                "jupyter.themeMatplotlibPlots": {
                    "type": "boolean",
                    "default": false,
                    "description": "In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.",
                    "scope": "resource"
                },
                "jupyter.liveShareConnectionTimeout": {
                    "type": "number",
                    "default": 1000,
                    "description": "Amount of time to wait for guest connections to verify they have the Python extension installed.",
                    "scope": "application"
                },
                "jupyter.decorateCells": {
                    "type": "boolean",
                    "default": true,
                    "description": "Draw a highlight behind the currently active cell.",
                    "scope": "resource"
                },
                "jupyter.enableCellCodeLens": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables code lens for 'cells' in a python file.",
                    "scope": "resource"
                },
                "jupyter.enableAutoMoveToNextCell": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
                    "scope": "resource"
                },
                "jupyter.autoPreviewNotebooksInInteractivePane": {
                    "type": "boolean",
                    "deprecationMessage": "No longer supported. Notebooks open directly in their own editor now.",
                    "default": false,
                    "description": "When opening ipynb files, automatically preview the contents in the Interactive window.",
                    "scope": "resource"
                },
                "jupyter.useNotebookEditor": {
                    "type": "boolean",
                    "default": true,
                    "description": "Automatically open .ipynb files in the Notebook Editor.",
                    "scope": "resource"
                },
                "jupyter.allowUnauthorizedRemoteConnection": {
                    "type": "boolean",
                    "default": false,
                    "description": "Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.",
                    "scope": "resource"
                },
                "jupyter.enablePlotViewer": {
                    "type": "boolean",
                    "default": true,
                    "description": "Modify plot output so that it can be expanded into a plot viewer window.",
                    "scope": "resource"
                },
                "jupyter.codeLenses": {
                    "type": "string",
                    "default": "jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell",
                    "description": "Set of commands to put as code lens above a cell. Defaults to 'jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell'",
                    "scope": "resource"
                },
                "jupyter.debugCodeLenses": {
                    "type": "string",
                    "default": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
                    "description": "Set of debug commands to put as code lens above a cell while debugging.",
                    "scope": "resource"
                },
                "jupyter.debugpyDistPath": {
                    "type": "string",
                    "default": "",
                    "description": "Path to debugpy bits for debugging cells.",
                    "scope": "resource"
                },
                "jupyter.stopOnFirstLineWhileDebugging": {
                    "type": "boolean",
                    "default": true,
                    "description": "When debugging a cell, stop on the first line.",
                    "scope": "resource"
                },
                "jupyter.remoteDebuggerPort": {
                    "type": "number",
                    "default": -1,
                    "description": "When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.",
                    "scope": "resource"
                },
                "jupyter.disableJupyterAutoStart": {
                    "type": "boolean",
                    "default": false,
                    "description": "When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.",
                    "scope": "resource"
                },
                "jupyter.textOutputLimit": {
                    "type": "number",
                    "default": 20000,
                    "description": "Limit the amount of text in Interactive cell text output to this value. 0 to allow any amount of characters.",
                    "scope": "resource"
                },
                "jupyter.colorizeInputBox": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether or not to use the theme's peek color as the background for the input box.",
                    "scope": "resource"
                },
                "jupyter.stopOnError": {
                    "type": "boolean",
                    "default": true,
                    "description": "Stop running cells if a cell throws an exception.",
                    "scope": "resource"
                },
                "jupyter.addGotoCodeLenses": {
                    "type": "boolean",
                    "default": true,
                    "description": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
                    "scope": "resource"
                },
                "jupyter.variableQueries": {
                    "type": "array",
                    "description": "Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example: \n'[\n{\n   \"language\": \"python\",\n   \"query\": \"%who_ls\",\n  \"parseExpr\": \"'(\\\\w+)'\"\n}\n]'",
                    "scope": "machine",
                    "examples": [
                        [
                            {
                                "language": "python",
                                "query": "_rwho_ls = %who_ls\\nprint(_rwho_ls)",
                                "parseExpr": "'(\\w+)'"
                            },
                            {
                                "language": "julia",
                                "query": "whos",
                                "parseExpr": "'(\\w+)'"
                            }
                        ]
                    ]
                },
                "jupyter.interactiveWindowMode": {
                    "type": "string",
                    "enum": [
                        "perFile",
                        "single",
                        "multiple"
                    ],
                    "scope": "resource",
                    "description": "Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
                    "default": "multiple"
                },
                "jupyter.magicCommandsAsComments": {
                    "type": "boolean",
                    "default": false,
                    "description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
                    "scope": "resource"
                },
                "jupyter.runMagicCommands": {
                    "type": "string",
                    "default": "",
                    "deprecationMessage": "This setting has been deprecated in favor of 'runStartupCommands'.",
                    "description": "A series of Python instructions or iPython magic commands separated by '\\n' that will be executed when the interactive window loads.",
                    "scope": "application"
                },
                "jupyter.runStartupCommands": {
                    "type": "array",
                    "default": "",
                    "description": "A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.",
                    "scope": "application"
                },
                "jupyter.debugJustMyCode": {
                    "type": "boolean",
                    "default": true,
                    "description": "When debugging, debug just my code.",
                    "scope": "resource"
                },
                "jupyter.alwaysTrustNotebooks": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "Enabling this setting will automatically trust any opened notebook and therefore display markdown and render code cells. You will no longer be prompted to trust individual notebooks and harmful code could automatically run. \n\n[Learn more.](https://aka.ms/trusted-notebooks)",
                    "scope": "machine"
                },
                "jupyter.insidersChannel": {
                    "type": "string",
                    "default": "off",
                    "description": "Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the Jupyter extension, which include upcoming features and bug fixes.",
                    "enum": [
                        "off",
                        "weekly",
                        "daily"
                    ],
                    "scope": "application"
                }
            }
        },
        "languages": [
            {
                "id": "jupyter",
                "aliases": [
                    "Jupyter",
                    "Notebook"
                ],
                "extensions": [
                    ".ipynb"
                ]
            },
            {
                "id": "julia",
                "aliases": [
                    "Julia",
                    "julia"
                ],
                "extensions": [
                    ".jl"
                ]
            }
        ],
        "notebookProvider": [
            {
                "viewType": "jupyter-notebook",
                "displayName": "Jupyter Notebook (preview)",
                "selector": [
                    {
                        "filenamePattern": "*.ipynb"
                    }
                ],
                "priority": "option"
            }
        ],
        "customEditors": [
            {
                "viewType": "jupyter.notebook.ipynb",
                "displayName": "Jupyter Notebook",
                "selector": [
                    {
                        "filenamePattern": "*.ipynb"
                    }
                ],
                "priority": "option"
            }
        ]
    },
    "scripts": {
        "package": "gulp clean && gulp prePublishBundle && vsce package -o ms-toolsai-jupyter-insiders.vsix",
        "compile": "tsc -watch -p ./",
        "compiled": "deemon npm run compile",
        "kill-compiled": "deemon --kill npm run compile",
        "compile-webviews-watch": "gulp compile-ipywidgets && cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./build/webpack/webpack.datascience-ui.config.js --watch",
        "compile-webviews-watchd": "deemon npm run compile-webviews-watch",
        "kill-compile-webviews-watchd": "deemon --kill npm run compile-webviews-watch",
        "build-ipywidgets": "npm run build-ipywidgets-clean && npm run build-ipywidgets-compile && npm run build-ipywidgets-webpack",
        "build-ipywidgets-clean": "node ./src/ipywidgets/scripts/clean.js",
        "build-ipywidgets-compile": "tsc -p ./src/ipywidgets && rimraf ./out/tsconfig.tsbuildinfo && node ./src/ipywidgets/scripts/copyfiles.js",
        "build-ipywidgets-webpack": "cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./src/ipywidgets/webpack.config.js",
        "checkDependencies": "gulp checkDependencies",
        "postinstall": "node ./build/ci/postInstall.js",
        "test:unittests": "mocha --config ./build/.mocha.unittests.js.json",
        "test:unittests:cover": "nyc --no-clean --nycrc-path build/.nycrc mocha --config ./build/.mocha.unittests.ts.json",
        "test:functional": "mocha --require source-map-support/register --config ./build/.mocha.functional.json",
        "test:functional:perf": "node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json",
        "test:functional:memleak": "node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json",
        "test:functional:cover": "npm run test:functional",
        "test:functional:parallel": "cross-env VSC_JUPYTER_CI_TEST_PARALLEL=1 node ./build/ci/scripts/runFunctionalTests.js",
        "test:cover:report": "nyc --nycrc-path build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura",
        "preTestJediLSP": "node ./out/test/languageServers/jedi/lspSetup.js",
        "testJediLSP": "node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_JUPYTER_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js",
        "pretestVSCode": "cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=stable node ./out/test/datascience/dsTestSetup.js",
        "testVSCode": "cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=stable TEST_FILES_SUFFIX=vscode.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js",
        "pretestNativeNotebooksInVSCode": "cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true node ./out/test/datascience/dsTestSetup.js",
        "testNativeNotebooksInVSCode": "cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_RUN_NB_TEST=true TEST_FILES_SUFFIX=vscode.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js",
        "testPerformance": "node ./out/test/testBootstrap.js ./out/test/performanceTest.js",
        "testSmoke": "node ./out/test/testBootstrap.js ./out/test/smokeTest.js",
        "lint-staged": "node gulpfile.js",
        "lint": "tslint src/**/*.ts -t verbose",
        "prettier-fix": "prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write",
        "clean": "gulp clean",
        "updateBuildNumber": "gulp updateBuildNumber",
        "webpack": "webpack"
    },
    "dependencies": {
        "@enonic/fnv-plus": "^1.3.0",
        "@jupyter-widgets/base": "^2.0.1",
        "@jupyter-widgets/controls": "^1.5.2",
        "@jupyter-widgets/jupyterlab-manager": "^1.0.2",
        "@jupyter-widgets/output": "^2.0.1",
        "@jupyter-widgets/schema": "^0.4.0",
        "@jupyterlab/coreutils": "^3.1.0",
        "@jupyterlab/services": "^4.2.0",
        "@loadable/component": "^5.12.0",
        "@nteract/messaging": "^7.0.0",
        "@nteract/transform-dataresource": "^4.3.5",
        "@nteract/transform-geojson": "^3.2.3",
        "@nteract/transform-model-debug": "^3.2.3",
        "@nteract/transform-plotly": "^6.0.0",
        "@nteract/transform-vega": "^6.0.3",
        "@nteract/transforms": "^4.4.7",
        "@octokit/rest": "^18.0.6",
        "@phosphor/widgets": "^1.9.3",
        "ansi-regex": "^4.1.0",
        "ansi-to-html": "^0.6.7",
        "arch": "^2.1.0",
        "bootstrap": "^4.3.1",
        "bootstrap-less": "^3.3.8",
        "detect-indent": "^6.0.0",
        "diff-match-patch": "^1.0.0",
        "fast-deep-equal": "^2.0.1",
        "font-awesome": "^4.7.0",
        "fs-extra": "^4.0.3",
        "get-port": "^3.2.0",
        "glob": "^7.1.2",
        "hash.js": "^1.1.7",
        "iconv-lite": "^0.4.21",
        "inversify": "^4.11.1",
        "is-online": "^8.2.1",
        "jsonc-parser": "^2.0.3",
        "lodash": "^4.17.19",
        "log4js": "^6.1.2",
        "md5": "^2.2.1",
        "named-js-regexp": "^1.3.3",
        "node-fetch": "^2.6.1",
        "node-stream-zip": "^1.6.0",
        "onigasm": "^2.2.2",
        "pdfkit": "^0.11.0",
        "plotly.js-dist": "^1.55.2",
        "portfinder": "^1.0.25",
        "react": "^16.5.2",
        "react-data-grid": "^6.0.2-0",
        "react-dom": "^16.5.2",
        "react-draggable": "^4.4.2",
        "react-redux": "^7.1.1",
        "react-svg-pan-zoom": "^3.1.0",
        "react-svgmt": "^1.1.8",
        "react-virtualized": "^9.21.1",
        "redux": "^4.0.4",
        "redux-logger": "^3.0.6",
        "reflect-metadata": "^0.1.12",
        "request": "^2.87.0",
        "request-progress": "^3.0.0",
        "requirejs": "^2.3.6",
        "rxjs": "^6.5.4",
        "rxjs-compat": "^6.5.4",
        "sanitize-filename": "^1.6.3",
        "semver": "^5.5.0",
        "slickgrid": "^2.4.17",
        "stack-trace": "0.0.10",
        "string-argv": "^0.3.1",
        "strip-ansi": "^5.2.0",
        "svg-inline-react": "^3.1.0",
        "svg-to-pdfkit": "^0.1.8",
        "tcp-port-used": "^1.0.1",
        "tmp": "^0.0.29",
        "typescript-char": "^0.0.0",
        "uint64be": "^1.0.1",
        "unicode": "^10.0.0",
        "untildify": "^3.0.2",
        "uuid": "^3.3.2",
        "vscode-debugprotocol": "^1.28.0",
        "vscode-extension-telemetry": "0.1.4",
        "vscode-jsonrpc": "6.0.0-next.5",
        "vscode-languageclient": "7.0.0-next.9",
        "vscode-languageserver": "7.0.0-next.7",
        "vscode-languageserver-protocol": "3.16.0-next.7",
        "vscode-tas-client": "^0.1.4",
        "vsls": "^0.3.1291",
        "winston": "^3.2.1",
        "ws": "^6.0.0",
        "zeromq": "^6.0.0-beta.6"
    },
    "devDependencies": {
        "@babel/cli": "^7.8.4",
        "@babel/core": "^7.4.4",
        "@babel/plugin-transform-runtime": "^7.4.4",
        "@babel/polyfill": "^7.4.4",
        "@babel/preset-env": "^7.1.0",
        "@babel/preset-react": "^7.0.0",
        "@babel/register": "^7.9.0",
        "@istanbuljs/nyc-config-typescript": "^0.1.3",
        "@sinonjs/fake-timers": "^6.0.1",
        "@testing-library/react": "^9.4.0",
        "@types/ansi-regex": "^4.0.0",
        "@types/chai": "^4.1.2",
        "@types/chai-arrays": "^1.0.2",
        "@types/chai-as-promised": "^7.1.0",
        "@types/copy-webpack-plugin": "^4.4.2",
        "@types/cors": "^2.8.6",
        "@types/debug": "^4.1.5",
        "@types/dedent": "^0.7.0",
        "@types/del": "^4.0.0",
        "@types/diff-match-patch": "^1.0.32",
        "@types/download": "^6.2.2",
        "@types/enzyme": "^3.1.14",
        "@types/enzyme-adapter-react-16": "^1.0.3",
        "@types/event-stream": "^3.3.33",
        "@types/fs-extra": "^5.0.1",
        "@types/get-port": "^3.2.0",
        "@types/glob": "^5.0.35",
        "@types/html-webpack-plugin": "^3.2.0",
        "@types/iconv-lite": "^0.0.1",
        "@types/jsdom": "^11.12.0",
        "@types/loadable__component": "^5.10.0",
        "@types/loader-utils": "^1.1.3",
        "@types/lodash": "^4.14.104",
        "@types/md5": "^2.1.32",
        "@types/memoize-one": "^4.1.1",
        "@types/mocha": "^5.2.7",
        "@types/nock": "^10.0.3",
        "@types/node": "^10.14.18",
        "@types/node-fetch": "^2.5.7",
        "@types/pdfkit": "^0.7.36",
        "@types/promisify-node": "^0.4.0",
        "@types/react": "^16.4.14",
        "@types/react-dom": "^16.0.8",
        "@types/react-json-tree": "^0.6.8",
        "@types/react-redux": "^7.1.5",
        "@types/react-virtualized": "^9.21.2",
        "@types/redux-logger": "^3.0.7",
        "@types/request": "^2.47.0",
        "@types/semver": "^5.5.0",
        "@types/shortid": "^0.0.29",
        "@types/sinon": "^7.5.1",
        "@types/sinonjs__fake-timers": "^6.0.1",
        "@types/socket.io": "^2.1.4",
        "@types/stack-trace": "0.0.29",
        "@types/tcp-port-used": "^1.0.0",
        "@types/temp": "^0.8.32",
        "@types/tmp": "0.0.33",
        "@types/untildify": "^3.0.0",
        "@types/uuid": "^3.4.3",
        "@types/vscode": "^1.47.0",
        "@types/webpack-bundle-analyzer": "^2.13.0",
        "@types/winreg": "^1.2.30",
        "@types/ws": "^6.0.1",
        "@types/xml2js": "^0.4.2",
        "@typescript-eslint/eslint-plugin": "^3.7.0",
        "@typescript-eslint/parser": "^3.7.0",
        "acorn": "^6.4.1",
        "babel-polyfill": "^6.26.0",
        "cache-loader": "^4.1.0",
        "canvas": "^2.6.0",
        "chai": "^4.1.2",
        "chai-arrays": "^2.0.0",
        "chai-as-promised": "^7.1.1",
        "codecov": "^3.7.1",
        "colors": "^1.2.1",
        "copy-webpack-plugin": "^5.1.1",
        "cors": "^2.8.5",
        "cross-env": "^6.0.3",
        "cross-spawn": "^6.0.5",
        "css-loader": "^1.0.1",
        "dedent": "^0.7.0",
        "deemon": "^1.4.0",
        "del": "^3.0.0",
        "download": "^7.0.0",
        "enzyme": "^3.7.0",
        "enzyme-adapter-react-16": "^1.6.0",
        "eslint": "^7.2.0",
        "eslint-config-airbnb": "^18.2.0",
        "eslint-config-prettier": "^6.9.0",
        "eslint-plugin-import": "^2.22.0",
        "eslint-plugin-jsx-a11y": "^6.3.1",
        "eslint-plugin-prettier": "^3.1.2",
        "eslint-plugin-react": "^7.20.3",
        "eslint-plugin-react-hooks": "^4.0.0",
        "expose-loader": "^0.7.5",
        "express": "^4.17.1",
        "fast-xml-parser": "^3.16.0",
        "file-loader": "^5.1.0",
        "flat": "^4.0.0",
        "fork-ts-checker-webpack-plugin": "^5.2.0",
        "gulp": "^4.0.0",
        "gulp-azure-storage": "^0.11.1",
        "gulp-filter": "^5.1.0",
        "gulp-rename": "^1.4.0",
        "gulp-typescript": "^4.0.1",
        "html-webpack-plugin": "^3.2.0",
        "husky": "^1.1.2",
        "jsdom": "^15.0.0",
        "less": "^3.9.0",
        "less-loader": "^5.0.0",
        "less-plugin-inline-urls": "^1.2.0",
        "lolex": "^5.1.2",
        "mocha": "^8.1.1",
        "mocha-junit-reporter": "^1.17.0",
        "mocha-multi-reporters": "^1.1.7",
        "monaco-editor": "0.18.1",
        "monaco-editor-textmate": "^2.2.1",
        "monaco-editor-webpack-plugin": "^1.7.0",
        "monaco-textmate": "^3.0.1",
        "nocache": "^2.1.0",
        "nock": "^10.0.6",
        "node-has-native-dependencies": "^1.0.2",
        "node-html-parser": "^1.1.13",
        "nyc": "^15.0.0",
        "playwright-chromium": "^1.4.2",
        "postcss": "^7.0.27",
        "postcss-cssnext": "^3.1.0",
        "postcss-import": "^12.0.1",
        "postcss-loader": "^3.0.0",
        "prettier": "^2.0.2",
        "range-inclusive": "^1.0.2",
        "relative": "^3.0.2",
        "remove-files-webpack-plugin": "^1.4.0",
        "rewiremock": "^3.13.0",
        "rimraf": "^3.0.2",
        "sinon": "^8.0.1",
        "socket.io": "^2.3.0",
        "source-map-support": "^0.5.12",
        "style-loader": "^0.23.1",
        "svg-inline-loader": "^0.8.0",
        "terser-webpack-plugin": "^3.1.0",
        "thread-loader": "^2.1.3",
        "transform-loader": "^0.2.4",
        "ts-loader": "^5.3.0",
        "ts-mock-imports": "^1.3.0",
        "ts-mockito": "^2.5.0",
        "ts-node": "^8.3.0",
        "tsconfig-paths-webpack-plugin": "^3.2.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.18.0",
        "tslint-eslint-rules": "^5.1.0",
        "tslint-microsoft-contrib": "^5.0.3",
        "tslint-plugin-prettier": "^2.1.0",
        "typemoq": "^2.1.0",
        "typescript": "^4.0.2",
        "typescript-formatter": "^7.1.0",
        "unicode-properties": "^1.3.1",
        "url-loader": "^1.1.2",
        "vsce": "^1.59.0",
        "vscode-test": "^1.2.3",
        "webpack": "^4.33.0",
        "webpack-bundle-analyzer": "^3.6.0",
        "webpack-cli": "^3.1.2",
        "webpack-fix-default-import-plugin": "^1.0.3",
        "why-is-node-running": "^2.0.3",
        "yargs": "^15.4.1",
        "yargs-parser": ">=13.1.2"
    }
}
