language: python
sudo: required
dist: trusty

addons:
  apt:
    packages:
      - libsecret-1-dev
matrix:
    include:
        # # Use the built in venv for linux builds
        - os: linux
          sudo: required
          python: 2.7
        - os: linux
          sudo: required
          python: 3.5
        # # Use generic language for osx
        - os: osx
          language: generic
          env: PYTHON=2.7.10
        # Use generic language for osx
        - os: osx
          language: generic
          env: PYTHON=3.5.1
# Perform the manual steps on osx to install python3 and activate venv
before_install: |
  if [ $TRAVIS_OS_NAME == "linux" ]; then
    export CXX="g++-4.9" CC="gcc-4.9" DISPLAY=:99.0;
    sh -e /etc/init.d/xvfb start;
    sleep 3;
  fi
  git submodule update --init --recursive
  git clone https://github.com/creationix/nvm.git ./.nvm
  source ./.nvm/nvm.sh
  nvm install 7.2.1
  nvm use 7.2.1
  npm config set python `which python`
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update; 
    brew install openssl readline 
    brew outdated pyenv || brew upgrade pyenv 
    brew install pyenv-virtualenv
    brew install pyenv-virtualenvwrapper
    pyenv install $PYTHON 
    pyenv virtualenv $PYTHON MYVERSION
    source ~/.pyenv/versions/MYVERSION/bin/activate
    python --version 
    python -c 'import sys;print(sys.version)' 
    python -c 'import sys;print(sys.executable)' 
  fi
install:
# we have this here so we can see where python is installed and hardcode in our tests
# else when running npm test, the python version picked is completely different :(
  - python --version 
  - python -c 'import sys;print(sys.executable)'
  - pip install -r requirements.txt
  - npm install
  - npm run vscode:prepublish
  
script:
  - npm test --silent