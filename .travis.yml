language: python
cache: pip

matrix:
    include:
        - os: linux
          python: "2.7"
          env: DEBUGGER_TEST=true
        - os: linux
          python: "2.7"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "2.7"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "2.7"
          env: MULTIROOT_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: DEBUGGER_TEST=true
        - os: linux
          python: "3.6-dev"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "3.6-dev"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: MULTIROOT_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: PERFORMANCE_TEST=true
    allow_failures:
        - os: linux
          python: "2.7"
          env: DEBUGGER_TEST=true
        - os: linux
          python: "2.7"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "2.7"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "2.7"
          env: MULTIROOT_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: DEBUGGER_TEST=true
        - os: linux
          python: "3.6-dev"
          env: DEBUGGER_TEST_RELEASE=true
        - os: linux
          python: "3.6-dev"
          env: SINGLE_WORKSPACE_TEST=true
        - os: linux
          python: "3.6-dev"
          env: MULTIROOT_WORKSPACE_TEST=true
before_install: |
  if [ $TRAVIS_OS_NAME == "linux" ]; then
    export CXX="g++-4.9" CC="gcc-4.9" DISPLAY=:99.0;
    sh -e /etc/init.d/xvfb start;
    sleep 3;
  fi
  git clone https://github.com/creationix/nvm.git ./.nvm
  source ./.nvm/nvm.sh
  nvm install 8.9.1
  nvm use 8.9.1
  yarn global add vsce
  yarn global add azure-cli
  export TRAVIS_PYTHON_PATH=`which python`
install:
  - python -m pip install --upgrade -r requirements.txt
  - python -m pip install -t ./pythonFiles/experimental/ptvsd git+https://github.com/Microsoft/ptvsd/
  - yarn --frozen-lockfile

script:
  - if [ $DEBUGGER_TEST == "true" ]; then
        yarn run clean;
        yarn run vscode:prepublish;
        yarn run cover:enable;
        yarn run testDebugger --silent;
    fi
  - yarn run debugger-coverage
  - if [ $TRAVIS_UPLOAD_COVERAGE == "true" ]; then
        bash <(curl -s https://codecov.io/bash);
    fi
  - yarn run clean:ptvsd
  - pip install -t ./pythonFiles/experimental/ptvsd ptvsd --pre --no-cache-dir;
  - if [ $DEBUGGER_TEST_RELEASE == "true" ]; then
        yarn run clean;
        yarn run vscode:prepublish;
        yarn run cover:enable;
        yarn run testDebugger --silent;
    fi
  - yarn run debugger-coverage
  - if [ $TRAVIS_UPLOAD_COVERAGE == "true" ]; then
        bash <(curl -s https://codecov.io/bash);
    fi
  - if [ $SINGLE_WORKSPACE_TEST == "true" ]; then
        yarn run clean;
        yarn run vscode:prepublish;
        yarn run cover:enable;
        yarn run testSingleWorkspace --silent;
    fi
  - if [ $TRAVIS_UPLOAD_COVERAGE == "true" ]; then
        bash <(curl -s https://codecov.io/bash);
    fi
  - if [ $MULTIROOT_WORKSPACE_TEST == "true" ]; then
        yarn run clean;
        yarn run vscode:prepublish;
        yarn run cover:enable;
        yarn run testMultiWorkspace --silent;
    fi
  - if [ $TRAVIS_UPLOAD_COVERAGE == "true" ]; then
        bash <(curl -s https://codecov.io/bash);
    fi
  - if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" && "$PERFORMANCE_TEST" == "true" ]]; then
        yarn run clean;
        yarn run vscode:prepublish;
        yarn run testPerformance --silent;
    fi
  - if [ "$TRAVIS_PYTHON_VERSION" != "2.7" ]; then
        python3 -m pip install --upgrade -r news/requirements.txt;
        python3 news/announce.py --dry_run;
    fi
  - if [[ $AZURE_STORAGE_ACCOUNT && "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == "false" ]]; then
        yarn run clean;
        vsce package;
        azure storage blob upload python*.vsix $AZURE_STORAGE_CONTAINER ms-python-insiders.vsix --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_ACCESS_KEY --quiet;
    fi
