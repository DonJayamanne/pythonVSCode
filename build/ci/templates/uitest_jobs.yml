# Parameters
# 1. jobs
#   Mandatory.
#   Contains a list of all tests that needs to be run.
#   Sample:
#   ```
#   - template: templates/uitest_jobs.yml
#   parameters:
#     jobs:
#     - test: "Smoke"
#       tags: "--tags=smoke"
#     - test: "Test"
#       tags: "--tags=test"
#     - test: "Terminal"
#       tags: "--tags=terminal"
#   ```
#   Based on the sample, we're running 3 tests with the names `Smoke`, `Test`, and `Terminal`.
#   The tags inside each test contains the arguments that needs to be passd into behave.
#   Please pass in just the `tags` arguments.
#   Multiple tag values can be passed in as follows:
#       tags: "--tags=debug --tags=remote"
#   More information on --tags argument for behave can be found here:
#       * https://behave.readthedocs.io/en/latest/tutorial.html#controlling-things-with-tags
#       * https://behave.readthedocs.io/en/latest/tag_expressions.html
# 2. ignorePythonVersions
#   Comma delimited list of Python versions not to be tested against.
#   E.g. = 3.7,3.6
#   Possible values 3.7, 3.6, 3.5, 3.5, 2.7
#   Any OS provided in this string will not be tested against.
# 3. ignoreOperatingSystems
#   Comma delimited list of OS not to be tested against.
#   E.g. = win, linux
#   Possible values = mac, win linux
# 4. pythonVersions
#   Do not pass.
#   Defines the versions of Pythons versions we run tests against.
#   We use this to build a list of python versions as a list instead of having to hardcode them.
#   This way we just use a simple for loop and run jobs for each OS and each Python version.

parameters:
  jobs: []
  ignorePythonVersions: ""
  ignoreOperatingSystems: ""
  pythonVersions: [
      {
          "version": "3.7",
          "displayName": "37",
          "excludeTags": "--tags=~@python3.6 --tags=~@python3.5 --tags=~@python2"
      },
      {
          "version": "3.6",
          "displayName": "36",
          "excludeTags": "--tags=~@python3.7 --tags=~@python3.5 --tags=~@python2"
      },
      {
          "version": "3.5",
          "displayName": "35",
          "excludeTags": "--tags=~@python3.7 --tags=~@python3.6 --tags=~@python2"
      },
      {
          "version": "2.7",
          "displayName": "27",
          "excludeTags": "--tags=~@python3.7 --tags=~@python3.5 --tags=~@python3"
      }
    ]


jobs:
- job: UITest
#   dependsOn:
#     - Compile
#     - Build
  timeoutInMinutes: 90
  strategy:
    matrix:
      ${{ each job in parameters.jobs }}:
        ${{ each py in parameters.pythonVersions }}:
          ${{ if not(contains(coalesce(job.ignorePythonVersions, ''), py.version)) }}:
            ${{ if not(contains(coalesce(job.ignoreOperatingSystems, ''), 'mac')) }}:
              ${{ format('Mac{0}{1}', py.displayName, job.test) }}:
                PythonVersion: ${{ py.version }}
                VMImageName: "macos-10.13"
                Tags: ${{ format('{0} {1} --tags=~@win --tags=~@linux', job.tags, py.excludeTags) }}

            ${{ if not(contains(coalesce(job.ignoreOperatingSystems, ''), 'win')) }}:
              ${{ format('Win{0}{1}', py.displayName, job.test) }}:
                PythonVersion: ${{ py.version }}
                VMImageName: "vs2017-win2016"
                Tags: ${{ format('{0} {1} --tags=~@mac --tags=~@linux', job.tags, py.excludeTags) }}

            ${{ if not(contains(coalesce(job.ignoreOperatingSystems, ''), 'linux')) }}:
              ${{ format('Linux{0}{1}', py.displayName, job.test) }}:
                PythonVersion: ${{ py.version }}
                VMImageName: "ubuntu-16.04"
                Tags: ${{ format('{0} {1} --tags=~@mac --tags=~@win', job.tags, py.excludeTags) }}

  pool:
    vmImage: $(VMImageName)

  steps:
    - template: uitest_phases.yml
